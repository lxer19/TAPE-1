URL: http://http.cs.berkeley.edu/~elan/phd/thesis.ps.gz
Refering-URL: http://http.cs.berkeley.edu/~elan/
Root-URL: http://www.cs.berkeley.edu
Title: An Agent-based Approach to Real-time Multimedia Transmission over Heterogeneous Environments  
Author: by Elan Amir Professor Randy H. Katz, co-Chair 
Degree: M.S. (University of California, Berkeley) 1995 A dissertation submitted in partial satisfaction of the requirements for the degree of Doctor of Philosophy in Computer Science in the GRADUATE DIVISION of the UNIVERSITY of CALIFORNIA at BERKELEY Committee in charge:  Professor Steven R. McCanne, co-Chair Professor Robert W. Brodersen Professor Jim Pitman  
Date: 1993  1998  
Address: Berkeley)  
Affiliation: B.S. (University of California,  
Abstract-found: 0
Intro-found: 1
Reference: [1] <institution> April 1998. </institution> <note> http://www.accord.co.il. </note>
Reference-contexts: Most of these function as H.323 [46] gateways that either bridge the IP-based network to the POTS network. While most of these products only handle the network level translations, one notable exception is the Accord MGC-100 <ref> [1] </ref>, which is an H.323 MCU that provides a hardware-based video transcoding service, including rate-control and stream mixing. The MGC-100 is a high-performance, hardware-based media gateway. Its primary limitation is the fact that it does not provide dynamic mechanisms based on user input for intra-session adaptation.
Reference: [2] <author> D. Scott Alexander, Marianne Shaw, Scott M. Nettles, and Jonathan M. Smith. </author> <title> Active bridging. </title> <booktitle> In Proceedings of SIGCOMM'97, </booktitle> <address> Cannes, France, </address> <month> Sep </month> <year> 1997. </year> <note> ACM. </note>
Reference-contexts: SwitchWare takes a language-based approach towards exploring the most extreme version of active networks where each packet executes a program. In addition to active packets, the SwitchWare architecture defines middleware switchlets that provide support for relatively simple and lightweight packets to embody complex functionality. Alexander et al. <ref> [2] </ref> describe an implementation of an active bridge implemented entirely by switchlets running within the SwitchWare architecture. A related effort is the BBN smart packets and active router projects [53] Bhattacharjee et al. [13] describe an active networks architecture for dealing with congestion in the network.
Reference: [3] <author> E. Amir. Carta: </author> <title> A network embedding tool. CS268 Final Project Report, </title> <month> May </month> <year> 1993. </year>
Reference: [4] <author> Elan Amir, Steven McCanne, and Martin Vetterli. </author> <title> A layered DCT coder for Internet video. </title> <booktitle> IEEE International Conference on Image Processing, </booktitle> <month> September </month> <year> 1996. </year>
Reference-contexts: Running each source at the rate of the slowest link is clearly undesirable and prevents well-connected receivers from fully exploiting their available bandwidth. This limitation can be overcome with a layered transmission scheme <ref> [4, 69, 87, 91] </ref>. In this model each source generates a layered media stream that is striped across multiple network channels.
Reference: [5] <author> Elan Amir, Steven McCanne, and Hui Zhang. </author> <title> An application-level video gateway. </title> <booktitle> In Proceedings of ACM Multimedia '95. ACM, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: Finally, we introduce the notion of RTP mixers and translators, which are analogous to our media gateways, and whose design and specification was influenced by our original media gateway work <ref> [5] </ref>. (a) Unicast Transmission Model (b) IP Multicast Model 1.4.1 Multicast Distribution The basic service model of IP multicast is to introduce a level of indirection in the addressing, namely the multicast group. <p> Fortunately, pixel subsampling can be carried out by operating on the DCT coefficients directly. Since the 2D DCT is a separable transform [79], we need only consider the one dimensional downsampling problem; that is, we can operate on each column of the 2D DCT independently. In joint work <ref> [5] </ref> with Steven McCanne, we developed an (approximate) algorithm for computing the downsampling of a 16-point signal using operations performed directly on the two 8-point DCT coefficients of the two halves of the 16-point signal. The output is an 8-point DCT of the subsampled signal.
Reference: [6] <author> Tom E. Anderson, David E. Culler, David A. Patterson, </author> <title> and the NOW Team. A case for networks of workstations: NOW. </title> <booktitle> IEEE Micro, </booktitle> <month> February </month> <year> 1995. </year>
Reference-contexts: Our implementation runs on the Berkeley Network of Workstations (NOW) <ref> [6] </ref> using the host manager deployment algorithm described in Section 5.1.3. The only unim-plemented portion of the design described above is service composition and the use of an automatic service location mechanism as detailed in Section 5.1.2. ASCP is as a string-based protocol.
Reference: [7] <author> Ken Arnold and James Gosling. </author> <title> The Java Programming Language. </title> <publisher> Addison-Wesley, </publisher> <year> 1996. </year>
Reference-contexts: After a number of years of experimentation with techniques for deploying and configuring video gateways and drawing upon emerging ideas in active networks and the success of Java's platform-independent computing model <ref> [7] </ref>, we refined our work into an architecture that provides a programmable infrastructure for deployment of application-level computation within the network. <p> While we have not included a solution to this problem in our current design, nothing in our service environment model precludes the use of type-safe languages such as Safe-Tcl [15], Java <ref> [7] </ref>, or Python [81] and as such we view this problem as important, yet orthogonal to our current endeavor.
Reference: [8] <institution> ARPANET Working Group Requests for Comment, DDN Network Information Center, SRI International, </institution> <address> Menlo Park, CA. </address> <note> Dynamic Host Configuration Protocol (DHCP), </note> <month> October </month> <year> 1993. </year> <month> RFC-1541. </month>
Reference-contexts: There are two basic approaches to this problem. The first relies on a centralized server at a well-known location that provides the necessary bootstrap. In this approach, the client obtains necessary rendezvous information from a server, e.g., using the Dynamic Host Configuration Protocol (DHCP) <ref> [8] </ref>. In contrast to this approach where a client pulls down service location information from a well-known point, multicast communication can be exploited to push service location information out to multicast listeners.
Reference: [9] <institution> ARPANET Working Group Requests for Comment, DDN Network Information Center, SRI International, Menlo Park, CA. Service Location Protocol, </institution> <month> June </month> <year> 1997. </year> <month> RFC-2165. </month>
Reference-contexts: In this model, a client listens on a well-known multicast address over which the required configuration information is periodically transmitted. Hodes et al. [50] describe a generalized scheme for service location using this approach based on the Service Location Protocol (SLP) <ref> [9] </ref>. In AS1, we decouple the physical location of the active service from the control communication channel by leveraging the level of indirection offered by multicast communication. This greatly simplifies the service location problem.
Reference: [10] <author> Hari Balakrishnan, Srinivasan Seshan, Elan Amir, and Randy H. Katz. </author> <title> Improving TCP/IP performance over wireless networks. </title> <booktitle> In Proceedings of 1st ACM Conf. on Mobile Computing and Networking (MOBICOM), </booktitle> <address> Berkeley, CA, </address> <month> November </month> <year> 1995. </year> <note> ACM. </note>
Reference-contexts: Examples of application-level filters include Web and e-mail filters that compress the transmitted data in these applications. Examples of filters at the operating system-level include a TCP filter that provides an implementation of a scheme for link-level retransmission of packets lost over a last-hop wireless link <ref> [10] </ref> and an NFS filter that performs an opportunistic compression optimization based on the fact that most NFS traffic is responses to READ requests and thus compresses the data in this case. <p> The ability to quickly re-program and deploy new protocols at any level in the network architecture is not possible in nor is it the goal of active services, and applications like nomadic routing [60], localized TCP optimizations (e.g., snoop <ref> [10] </ref>), SYN-flooding avoidance, etc. are not naturally amenable to our framework.
Reference: [11] <author> Tony Ballardie, Paul Francis, and Jon Crowcroft. </author> <title> Core based trees (CBT) an architecture for scalable inter-domain multicast routing. </title> <booktitle> In Proceedings of SIGCOMM '93, </booktitle> <pages> pages 85-95, </pages> <address> San Francisco, CA, </address> <month> September </month> <year> 1993. </year> <note> ACM. </note>
Reference-contexts: The predominant IP multicast routing protocols, Distance Vector Multicast Routing Protocol (DVMRP) [98] and the dense-mode variant of PIM [28], operate under the dense mode assumption. Since these protocols build distribution trees for each source, they are considered source-based routing protocols. An alternate approach, called sparse mode multicast <ref> [11, 28] </ref>, is suited for situations where receivers are sparsely distributed. In sparse mode multicast, routers are required to explicitly issue requests to join and leave the multicast group.
Reference: [12] <author> A. Banerjea, D. Ferrari, B. A. Mah, M. Moran, D. C. Verma, and H. Zhang. </author> <title> The Tenet real-time protocol suite: Design, implementation, and experiences. </title> <journal> IEEE/ACM Transcations on Networking, </journal> <volume> 4(1) </volume> <pages> 1-10, </pages> <month> February </month> <year> 1996. </year>
Reference-contexts: We conclude this section by mentioning the significant amount of work in the topic of real-time multimedia transport that has focussed on network layer solutions within the Integrated Services Packet Network (ISPN) architecture described by Braden et al. [16]. Reservation based protocols such as Tenet <ref> [12] </ref>, RSVP [106], ST-II [19] or the class-based CBQ scheme [35] attempt to solve the transport problem by providing deterministic or statistical levels of service at the network layer.
Reference: [13] <author> Samrat Bhattacharjee, Kenneth L. Calvert, and Ellen Zegura. </author> <title> On active networking and congestion. </title> <type> Technical Report GUT-CC-96/02, </type> <institution> College of Computing, Georgia Institute of Technology, </institution> <address> Atlanta GA, </address> <year> 1996. </year> <month> 102 </month>
Reference-contexts: Alexander et al. [2] describe an implementation of an active bridge implemented entirely by switchlets running within the SwitchWare architecture. A related effort is the BBN smart packets and active router projects [53] Bhattacharjee et al. <ref> [13] </ref> describe an active networks architecture for dealing with congestion in the network. They detail the use of active processors software modules that implement application specific processing on a packet-level basis.
Reference: [14] <author> Jean-Chrysostome Bolot, Thierry Turletti, and Ian Wakeman. </author> <title> Scalable feedback control for multicast video distribution in the Internet. </title> <booktitle> In Proceedings of SIGCOMM '94, </booktitle> <address> University College London, London, U.K., </address> <month> September </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: Distribution Monitoring. An important function of RTCP is to provide feedback to the session on the quality of the data distribution. This information is critical in diagnosing failures and monitoring performance, and can be used by applications to dynamically adapt to network congestion <ref> [14] </ref>. Monitoring statistics are disseminated from active sources via RTCP sender reports (SR) and from receivers back to the entire session via receiver reports (RR). The SR statistics include, among other things, the sender's cumulative packet count and sender's cumulative byte count. <p> But this style of adaptation is only one piece of the rate adaptation problem; another important goal of adaptation is to accommodate and avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders. While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> But this is only one piece of the rate adaptation problem; another important goal is to avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders 1 . While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> A number of existing schemes address part (a) and each approach can be further classified as either sender- or receiver-based. Sender-based schemes like those in ivs <ref> [14] </ref> and NeVit [18] adjust the rate of a source using explicit receiver feedback, while receiver-based schemes like Receiver-driven 1 We assume the network provides only best effort service and that applications are thus adaptive.
Reference: [15] <author> Nathaniel Borenstein. </author> <title> E-mail with a mind of its own: The Safe-Tcl language for enabled mail. </title> <booktitle> In Proceedings of IFIP International Conference, </booktitle> <address> Barcelona, Spain, </address> <year> 1994. </year>
Reference-contexts: While we have not included a solution to this problem in our current design, nothing in our service environment model precludes the use of type-safe languages such as Safe-Tcl <ref> [15] </ref>, Java [7], or Python [81] and as such we view this problem as important, yet orthogonal to our current endeavor. <p> First, the authenticity of the servent scripts must be guaranteed. One approach is to digitally sign the retrieved scripts and in this way guarantee their authenticity. Second, the MASH interpreter could be constrained from its current full Tcl implementation to 95 safer version of the Tcl interpreter <ref> [15] </ref> to guarantee the safety of the script execution. Finally, a common objection to real-time transcoders is that they are incompatible with encrypted sessions. The potential for running a servent in an adverse environment compromises the overall safety of the encryption scheme.
Reference: [16] <author> R. Braden, D. Clark, and S. Shenker. </author> <title> Integrated Services in the Internet Architecture: an Overview. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> June </month> <year> 1994. </year> <month> RFC-1633. </month>
Reference-contexts: We conclude this section by mentioning the significant amount of work in the topic of real-time multimedia transport that has focussed on network layer solutions within the Integrated Services Packet Network (ISPN) architecture described by Braden et al. <ref> [16] </ref>. Reservation based protocols such as Tenet [12], RSVP [106], ST-II [19] or the class-based CBQ scheme [35] attempt to solve the transport problem by providing deterministic or statistical levels of service at the network layer.
Reference: [17] <author> Tom Brown, Sharif Sazzad, Charles Schroeder, Pierce Cantrell, and Jerry Gibson. </author> <title> Packet video for heterogeneous networks using CU-SeeMe. </title> <booktitle> In Proceedings of the IEEE International Conference on Image Processing, </booktitle> <pages> pages 9-12, </pages> <address> Lausanne, Switzerland, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: To accommodate heterogeneity, the system offers two levels of quality: 320x240 and 160x120 pixel-sized frames. These flows are distributed simultaneously on multiple groups. The end client initially joins the first group and then drops down to the latter if it detects high packet loss <ref> [17] </ref>. Subsequent versions of the CUSeeMe system [102] leverage multicast communication and transcoding in a product which is analogous to our media gateway. However, the centralized nature of their architecture presents inherent scaling problems with respect to the number of streams it can handle. <p> Subsequently, several receiver-based schemes based on layered compression schemes have been developed. A simple application of the layered multicast approach was implemented by Brown et al. who implemented an extension to the basic CUSeeMe system <ref> [17] </ref> described in the previous section. Hoffmann and Speer also built a system based on the layered multicast architecture [51]. Their approach uses two adaptation techniques. One relies on a negotiation algorithm that obtains the highest quality of service from the network using an RSVP [106] session for each layer.
Reference: [18] <author> Ingo Busse, Bernd Deffner, and Henning Schulzrinne. </author> <title> Dynamic QoS control of multimedia applications based on RTP. </title> <booktitle> In Proceedings of the First International Workship on High Speed Networks and Open Distributed Platforms, </booktitle> <address> St. Petersburg, Russia, </address> <month> June </month> <year> 1995. </year>
Reference-contexts: But this style of adaptation is only one piece of the rate adaptation problem; another important goal of adaptation is to accommodate and avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders. While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> But this is only one piece of the rate adaptation problem; another important goal is to avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders 1 . While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> A number of existing schemes address part (a) and each approach can be further classified as either sender- or receiver-based. Sender-based schemes like those in ivs [14] and NeVit <ref> [18] </ref> adjust the rate of a source using explicit receiver feedback, while receiver-based schemes like Receiver-driven 1 We assume the network provides only best effort service and that applications are thus adaptive.
Reference: [19] <author> S. Casner, J. Lynn, P. Park, K. Schroder, and C. Topolcic. </author> <title> Experimental Internet Stream Protocol, </title> <type> version 2 (ST-II). </type> <institution> ARPANET Working Group Requests for Comment, DDN Network Information Center, SRI International, </institution> <address> Menlo Park, CA, </address> <month> October </month> <year> 1990. </year> <month> RFC-1190. </month>
Reference-contexts: We conclude this section by mentioning the significant amount of work in the topic of real-time multimedia transport that has focussed on network layer solutions within the Integrated Services Packet Network (ISPN) architecture described by Braden et al. [16]. Reservation based protocols such as Tenet [12], RSVP [106], ST-II <ref> [19] </ref> or the class-based CBQ scheme [35] attempt to solve the transport problem by providing deterministic or statistical levels of service at the network layer.
Reference: [20] <author> Yatin Chawathe, Steve Fink, Steven McCanne, and Eric Brewer. </author> <title> A proxy architecture for reliable multicast in heterogeneous environments. </title> <booktitle> In Proceedings of ACM Multimedia '98. ACM, </booktitle> <month> September </month> <year> 1998. </year> <note> To appear. </note>
Reference-contexts: In our current prototype we focussed only on the design and implementation on stateless audio and video media gateways. As a result, our whiteboard gateway is implemented a simple reflector. However, in the future we intend to leverage the initial efforts by Chawathe et al. <ref> [20] </ref> to develop an architecture for reliable real-time multicast gateways as a component of our service. 6.5 Summary In this chapter we have presented the design and implementation of the MeGa active service a fully implemented active service for transcoding of real-time multimedia data. <p> In these cases a better approach is to break up the connection at the point gateway and run an alternate reliable protocol between the gateway and client. A prototype of such a gateway was developed by Chawathe et al <ref> [20] </ref> for bridging the SRM protocol to the 3COM PalmPilot.
Reference: [21] <author> G. Chesson. </author> <title> XTP/protocol engine design. </title> <booktitle> In Proceedings of the IFIP WG6.1/6.4 Workshop, R uschlikon, </booktitle> <month> May </month> <year> 1989. </year>
Reference-contexts: Since the responses are all equivalent, all but one are redundant. The multicast implosion problem is solved with a technique called multicast damping first introduced in the IGMP [34] protocol and later used in the multicast version of XTP <ref> [21] </ref> and the SRM reliable multicast protocol [36]. The key dynamic of multicast damping is for responders to wait a random time interval before responding, and then to multicast their response to the group.
Reference: [22] <author> Gene Cheung. </author> <title> Private communication, </title> <month> April </month> <year> 1998. </year>
Reference-contexts: Then the problem becomes a question of maximizing the sum of the profits subject to the layering constraints and channel rates. Cheung has suggested that a natural fit for the function is a rate-distortion function where the SNR curves are weighted by the source weights <ref> [22] </ref>. Approximation algorithm for knapsack-type problem exist [62]. Despite the fact that the partial-order knapsack problem is strong NP-complete there is sufficient structure in the problem such that it might be amenable to some form of approximation algorithm, or perhaps a randomized approach.
Reference: [23] <author> Shun Yan Cheung, Mostafa H. Ammar, and Xue Li. </author> <title> On the use of destination set grouping to improve fairness in multicast video distribution. </title> <booktitle> In Proceedings IEEE Infocom '96, </booktitle> <pages> pages 553-560, </pages> <address> San Francisco, CA, </address> <month> March </month> <year> 1996. </year>
Reference-contexts: But this style of adaptation is only one piece of the rate adaptation problem; another important goal of adaptation is to accommodate and avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders. While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> But this is only one piece of the rate adaptation problem; another important goal is to avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders 1 . While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> Furthermore, we view the development of real-time network services as a complementary optimization: our protocols will work effectively in concert with real-time services if and when they become widely available. 46 Layered Multicast (RLM) [69], Destination Set Grouping <ref> [23] </ref>, and Thin Streams [103], tune the delivery rate at each receiver individually. In this latter case, each receiver tunes its inbound reception rate by adjusting its level of subscription to a set of hierarchical signal layers that are striped across multiple multicast groups.
Reference: [24] <author> David D. Clark. </author> <title> The design philosophy of the DARPA Internet protocols. </title> <booktitle> In Proceedings of SIGCOMM '88, </booktitle> <address> Stanford, CA, </address> <month> August </month> <year> 1988. </year> <note> ACM. </note>
Reference-contexts: We discuss an specific example of weight determination in Section 4.5. To enhance SCUBA's robustness, we deliberately designed the protocol using only soft state <ref> [24] </ref>. Sources and receivers can join and leave the session at will without impacting other session members. None of the state maintained at any source alone is critical to the correct execution of the algorithm since all state eventually times out and is refreshed by receiver reports. <p> Because state retained at each member site in the announce-listen eventually expires but is continuously refreshed it is often called soft state <ref> [24] </ref>. request for a service instance and host managers (HM) respond to these announcements instantiating servents for each unique request.
Reference: [25] <author> Jeremy R. Cooperstock, Sidney S. Fels, William Buxton, and Kenneth C. Smith. </author> <title> Reactive environments. </title> <journal> Communications of the ACM, </journal> <volume> 40(9) </volume> <pages> 65-73, </pages> <month> September </month> <year> 1997. </year>
Reference-contexts: The key point here is that we do not require the user to manually enter source weights, or for that matter, even know that the SCUBA protocol is being run. Rather, we bind user interface events to source weights. This approach matches Cooperstock et al.'s <ref> [25] </ref> notion of invisible interfaces in their Reactive Room, in which they stress the benefits of implicitly determining the interaction between the user and the underlying behavior of the system, leading to a reduced cognitive load on the user and a resulting overall increase in user-friendliness of the system. displaying the
Reference: [26] <author> Adam Costello. </author> <title> Search party: An approach to reliable multicast with local recovery. </title> <note> Submitted for publication, </note> <month> February </month> <year> 1998. </year>
Reference-contexts: While the primary motivation for subcasting has been in the context of local recovery of losses in reliable multicast protocols <ref> [75, 26] </ref>, it also provides interesting possibilities in our work. Subcast enables us to leverage geographic and topological locality in the SCUBA report transmissions, thereby providing a natural hierarchy for vote distribution.
Reference: [27] <author> Nigel Davies, Gordon S. Blair, Keith Chevrest, and Adrian Friday. </author> <title> Supporting adaptive services in a mobile heterogeneous environment. </title> <journal> Special Issue of Computer Communications on Mobile Computing, </journal> <year> 1996. </year> <month> 103 </month>
Reference-contexts: Most of these systems rely on the 22 existence of a proxy agent serving as an intermediary between the client and the server. The primary limitation of these systems is the existence of a central point of failure, namely the proxy. Davies et al. <ref> [27] </ref> present an architecture for network-aware adaptive applications by supplying network information to applications, thereby allowing the user/application to specify quality of service (QoS) specification based on the application performance. The work focuses on support for collaborative applications in a mobile environment, e.g., field engineers in a utility company.
Reference: [28] <author> Stephen Deering, Deborah Estrin, Dino Farinacci, and Van Jacobson. </author> <title> An architecture for wide-area multicast routing. </title> <booktitle> In Proceedings of SIGCOMM '94, </booktitle> <address> University College London, London, U.K., </address> <month> September </month> <year> 1994. </year> <note> ACM. </note>
Reference-contexts: The flood-and-prune operation is most efficient in distribution trees where the receivers are densely distributed, called dense mode multicast. The predominant IP multicast routing protocols, Distance Vector Multicast Routing Protocol (DVMRP) [98] and the dense-mode variant of PIM <ref> [28] </ref>, operate under the dense mode assumption. Since these protocols build distribution trees for each source, they are considered source-based routing protocols. An alternate approach, called sparse mode multicast [11, 28], is suited for situations where receivers are sparsely distributed. <p> The predominant IP multicast routing protocols, Distance Vector Multicast Routing Protocol (DVMRP) [98] and the dense-mode variant of PIM [28], operate under the dense mode assumption. Since these protocols build distribution trees for each source, they are considered source-based routing protocols. An alternate approach, called sparse mode multicast <ref> [11, 28] </ref>, is suited for situations where receivers are sparsely distributed. In sparse mode multicast, routers are required to explicitly issue requests to join and leave the multicast group.
Reference: [29] <author> Stephen E. Deering. </author> <title> Multicast Routing in a Datagram Internetwork. </title> <type> PhD thesis, </type> <institution> Stanford University, </institution> <month> December </month> <year> 1991. </year>
Reference-contexts: Thus, extending real-time Internet multimedia to these devices is difficult, if not impossible, despite the fact that real-time multimedia is perhaps their most compelling application. One particular barrier for multi-party conferencing applications is the lack of efficient mul-tipoint communication in the form of IP multicast <ref> [29] </ref> among all participants. This barrier is highlighted by the lack of multicast support in many of the technologies providing Internet connectivity, such as ISDN or packet-radio systems, and in many end-systems connecting to the Internet, such as thin clients. <p> The basic goal of this research was to minimize the number of duplicate copies required to distribute a single packet to the members of the group. The most significant development in this area was Deering's development of an efficient multi-point communication scheme, known as IP multicast <ref> [29, 30] </ref>. As illustrated in Figure 1.3 (b), using IP multicast (henceforth called simply multicast), an application sends data to multiple receivers by transmitting the data once. <p> Finally, in order to prevent packets from looping indefinitely in the network, each router must maintain a table of recently seen packets, which represents a significant memory overhead. A more efficient, and widely deployed multicast forwarding scheme is reverse path forwarding <ref> [29] </ref> (RPF). The basic operation is simple. For each source, if a packet arrives on a link that the local router believes to be the shortest path back to that source, the packet is forwarded along all interfaces except for the one on which it arrived.
Reference: [30] <author> Steve Deering. </author> <title> Host Extensions for IP Multicasting. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> August </month> <year> 1989. </year> <month> RFC-1112. </month>
Reference-contexts: The basic goal of this research was to minimize the number of duplicate copies required to distribute a single packet to the members of the group. The most significant development in this area was Deering's development of an efficient multi-point communication scheme, known as IP multicast <ref> [29, 30] </ref>. As illustrated in Figure 1.3 (b), using IP multicast (henceforth called simply multicast), an application sends data to multiple receivers by transmitting the data once.
Reference: [31] <author> Steve Deering. </author> <title> Internet multicast routing: State of the art and open research issues, </title> <booktitle> Octo-ber 1993. Multimedia Integrated Conferencing for Europe (MICE) Seminar at the Swedish Institute of Computer Science, </booktitle> <address> Stockholm. </address>
Reference-contexts: Using this feedback, each IVS source adapts its transmission rate based on whether or not a given threshold of the receivers is experiencing congestion. Deering first suggested the use of layered compression schemes for receiver-based adaptation where the signal layers are mapped onto multiple multicast groups <ref> [31] </ref>. In this scheme, receivers control their reception rate by joining and leaving the multicast groups corresponding to the various signal layers. Subsequently, several receiver-based schemes based on layered compression schemes have been developed.
Reference: [32] <author> Tim Dorcey and Richard Cogger. </author> <month> CU-SeeMe. </month> <institution> Cornell University. </institution> <note> Software on-line 1 </note> . 
Reference-contexts: The relevance of this work to this dissertation is in the use of transcoders to implement rate adaptation over heterogeneous networks. However, Thiruven-gadam does not present any details beyond a high-level description of an architecture and in particular there is no mention of implementation and deployment experience. The CUSeeMe <ref> [32] </ref> system uses reflectors, i.e., application-level agents that forward network packets between two network addresses to form a pseudo-multicast distribution network of video streams on the network. By pseudo-multicast we mean that multicast transmission is simulated via multiple unicast connections.
Reference: [33] <author> H. Eriksson. Mbone: </author> <title> The multicast backbone. </title> <journal> Communications of the ACM, </journal> <volume> 37(8) </volume> <pages> 54-60, </pages> <year> 1994. </year>
Reference-contexts: The resulting multicast infrastructure defined by the collection of multicast-capable routers and hosts connected to the networks served by these routers, is called the Multicast Backbone, or the MBone <ref> [33] </ref>. Over the past 11 years, the MBone has expanded from no more than a research curiosity to a global network encompassing over 1400 routers with thousands of connected hosts (see Figure 1.6).
Reference: [34] <author> W. Fenner. </author> <title> Internet Group Management Protocol, </title> <type> Version 2. </type> <institution> Internet Engineering Task Force, Inter-Domain Multicast Routing Working Group, </institution> <month> Feb </month> <year> 1996. </year> <title> Internet Draft (work in progress). </title>
Reference-contexts: We apply this technique in our agent architecture to enhance the scalability of our system by drawing upon the its use in two protocols: The Internet Group Membership Protocol (IGMP) <ref> [34] </ref> and Scalable Reliable Multicast (SRM) [36] protocol. The Internet Group Membership Protocol [34] described in Section 1.4.1 is an announce-listen protocol which uses multicast damping to conserve network resources and thus scale to Mul-ticast routers periodically transmit membership queries for each group in their routing tables. <p> We apply this technique in our agent architecture to enhance the scalability of our system by drawing upon the its use in two protocols: The Internet Group Membership Protocol (IGMP) <ref> [34] </ref> and Scalable Reliable Multicast (SRM) [36] protocol. The Internet Group Membership Protocol [34] described in Section 1.4.1 is an announce-listen protocol which uses multicast damping to conserve network resources and thus scale to Mul-ticast routers periodically transmit membership queries for each group in their routing tables. In response, directly connected hosts send membership responses. <p> Since the responses are all equivalent, all but one are redundant. The multicast implosion problem is solved with a technique called multicast damping first introduced in the IGMP <ref> [34] </ref> protocol and later used in the multicast version of XTP [21] and the SRM reliable multicast protocol [36]. The key dynamic of multicast damping is for responders to wait a random time interval before responding, and then to multicast their response to the group.
Reference: [35] <author> Sally Floyd and Van Jacobson. </author> <title> Link-sharing and resource management models for packet networks. </title> <journal> IEEE/ACM Transactions on Networking, </journal> <volume> 3(4) </volume> <pages> 365-386, </pages> <month> August </month> <year> 1995. </year>
Reference-contexts: Reservation based protocols such as Tenet [12], RSVP [106], ST-II [19] or the class-based CBQ scheme <ref> [35] </ref> attempt to solve the transport problem by providing deterministic or statistical levels of service at the network layer.
Reference: [36] <author> Sally Floyd, Van Jacobson, Steven McCanne, Ching-Gung Liu, and Lixia Zhang. </author> <title> A reliable multicast framework for light-weight sessions and application level framing. </title> <booktitle> In Proceedings of SIGCOMM '95, </booktitle> <address> Boston, MA, </address> <month> September </month> <year> 1995. </year> <note> ACM. </note>
Reference-contexts: tunnels whereas the darker edges represent physical links. 11 munication model to provide efficient multi-party multimedia communication, among which the most prominent are applications for audio conferencing such as nevot [85], vat [57], and rat, video conferencing application such as ivs [95], nv [40], and vic [68], and the wb <ref> [36] </ref> shared whiteboard tool. The proliferation of multimedia applications on the MBone heightened the need for a standard protocol for real-time multimedia transport, both to establish a standard for interoperability and furthermore to provide higher-level information, such as timing and naming information, required by this new class of applications. <p> We apply this technique in our agent architecture to enhance the scalability of our system by drawing upon the its use in two protocols: The Internet Group Membership Protocol (IGMP) [34] and Scalable Reliable Multicast (SRM) <ref> [36] </ref> protocol. The Internet Group Membership Protocol [34] described in Section 1.4.1 is an announce-listen protocol which uses multicast damping to conserve network resources and thus scale to Mul-ticast routers periodically transmit membership queries for each group in their routing tables. In response, directly connected hosts send membership responses. <p> This causes most responses to be suppressed and thus enable the protocol to scale to large numbers of hosts. (a) (b) (c) Multicast damping is the cornerstone of the Scalable Reliable Multicast (SRM) <ref> [36] </ref> protocol for reliable multicast transmission. SRM leverages the announce-listen model to obviate the acknowledgment implosion problem in reliable multicast transmissions. Figure 2.4 illustrates the manner in which SRM suppression is performed. In the Figure 2.4 (a) we see source S transmitting a packet to receivers 0-5. <p> Report intervals are dynamically sized to limit the control bandwidth to a fixed percentage of the session bandwidth. This scaling mechanism is employed by several announce-listen control protocols, including RTCP control traffic in RTP, Scalable Reliable Multicast (SRM) <ref> [36] </ref> session messages, and the Session Announcement Protocol (SAP) [47]. We analyze the scalability of the announce-listen metaphor with respect to SCUBA in Section 4.3. <p> Since the responses are all equivalent, all but one are redundant. The multicast implosion problem is solved with a technique called multicast damping first introduced in the IGMP [34] protocol and later used in the multicast version of XTP [21] and the SRM reliable multicast protocol <ref> [36] </ref>. The key dynamic of multicast damping is for responders to wait a random time interval before responding, and then to multicast their response to the group. If a responder sees an equivalent message from another member of the group, that responder can suppress, or damp, its response. <p> The problem of minimizing the number of duplicate launches is equivalent to the problem of minimizing the number of duplicate feedback messages in a multicast damping protocol <ref> [36, 88, 72] </ref>. Specifically in our context, the problem is how to choose the launch timer distribution so that the number of duplicate launches is minimized while at the same time minimizing the latency until the first launch. <p> This approach generalizes to several contexts. Sharma et al. [89] are investigating a very similar problem in the context of scalable session messages for SRM <ref> [36] </ref>. * Subcasting: The development of a mechanism for transmitting data on subtrees of multicast distribution trees, called subcasting, is a current topic of research in the reliable multicast community.
Reference: [37] <author> Armando Fox, Steven D. Gribble, Eric A. Brewer, and Elan Amir. </author> <title> Adapting to network and client variability via on-demand distiallation. </title> <booktitle> In Proc. Seventh Intl. Conf. on Arch. Support for Prog. Lang. and Oper. Sys. </booktitle> <address> (ASPLOS-VII), </address> <month> October </month> <year> 1996. </year>
Reference-contexts: The Rover Access Manager schedules transactions intelligently to optimize the utilization of the low-bandwidth link. However, 23 since the architecture is fundamentally RPC-based, it is not tuned for real-time constraints. In particular, there is no provision for real-time adaptation of the network utilization. The TranSend Proxy <ref> [37, 38] </ref> is a web-based proxy architecture that addresses both network and system heterogeneity by providing an extra level of indirection embodied in the Transend Proxy in the transfer path between the client and the server.
Reference: [38] <author> Armando Fox, Steven D. Gribble, Yatin Chawathe, and Eric A. Brewer. </author> <title> Cluster-based scalable network services. </title> <booktitle> In Proceedings of the Sixteenth Symposium on Operating Systems Principles (SOSP-16), </booktitle> <month> October </month> <year> 1997. </year>
Reference-contexts: The Rover Access Manager schedules transactions intelligently to optimize the utilization of the low-bandwidth link. However, 23 since the architecture is fundamentally RPC-based, it is not tuned for real-time constraints. In particular, there is no provision for real-time adaptation of the network utilization. The TranSend Proxy <ref> [37, 38] </ref> is a web-based proxy architecture that addresses both network and system heterogeneity by providing an extra level of indirection embodied in the Transend Proxy in the transfer path between the client and the server.
Reference: [39] <author> Ron Frederick. </author> <title> Network Video (nv). </title> <institution> Xerox Palo Alto Research Center. </institution> <note> Software on-line 2 </note> . 
Reference-contexts: However, the paper omits many important details and the authors did not implement their proposal. Thiruvengadam [94] describes the use of video gateways in hypermedia document retrieval. The work outlines the design of a simple transcoder (video gateway) for the nv <ref> [39] </ref> video format. Rate control is performed by modifying the quantization parameter in the nv codec in conjunction with spatial subsampling. The work also outlines general guidelines for deployment of video gateways in a media-on-demand environment. <p> The original implementation leveraged off the flexible code base in vic [67] and vat [57], by incorporating vic's H.261 encoder, JPEG decoder, and networking implementation. Following our initial JPEG/H.261 transcoder, we have added transcoders for the Nv video format <ref> [39] </ref>, and same-format transcoders for JPEG and H.261 transcoders which produce the output streams of the same format as the input stream, but with different characteristics (e.g, quantization factors, bandwidth requirement, frame rate and size, etc.) In addition, we have added audio transcoders for PCM to GSM and LPC formats. 39 <p> Following the video gateway application description, we present three other applications of SCUBA: end-to-end video conferencing, cross-media interactions and floor control. 4.1 Introduction and Motivation We motivate our approach to the intra-session bandwidth allocation problem by observing that although the MBone tools <ref> [95, 39, 85, 68, 57, 56] </ref> can be used for a variety of communication styles (e.g., point-to-point internet phone calls, small group design collaborations or research 45 meetings, or seminar distribution to large groups with tightly coupled feedback from the remote audience), a non-interactive, passive style of communication has emerged as
Reference: [40] <author> Ron Frederick. </author> <title> Experiences with real-time software video compression. </title> <booktitle> In Proceedings of the Sixth International Workshop on Packet Video, </booktitle> <address> Portland, OR, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: The dashed edges represent tunnels whereas the darker edges represent physical links. 11 munication model to provide efficient multi-party multimedia communication, among which the most prominent are applications for audio conferencing such as nevot [85], vat [57], and rat, video conferencing application such as ivs [95], nv <ref> [40] </ref>, and vic [68], and the wb [36] shared whiteboard tool.
Reference: [41] <author> M.R. Garey and D.S. Johnson. </author> <title> Computers and Intractablility. W.H. </title> <publisher> Freeman and Company, </publisher> <address> New York, </address> <year> 1979. </year>
Reference-contexts: for a given layer k, and " &gt; 0, does there exist a signal mapping such that: N1 X X R z L k &lt; " Unfortunately, this problem is almost certainly NP-complete since it is a generalization of the Partially Ordered Knapsack (POK) problem a known strong NP-complete problem <ref> [41] </ref> to multiple knapsacks. We reason this by that fact that the intra-source layering represents a total ordering, which across sources forms a partial order, and the network channels represent the knapsacks. Thus, our decision problem above is a restatement of the POK decision problem over multiple knapsacks.
Reference: [42] <institution> Graphics interchange format version 89a (GIF), </institution> <month> Jul </month> <year> 1990. </year> <note> CompuServe Incorporated. 1 ftp://gated.cornell.edu/pub/video 2 ftp://ftp.parc.xerox.com/net-research 104 </note>
Reference-contexts: The TranSend Proxy [37, 38] is a web-based proxy architecture that addresses both network and system heterogeneity by providing an extra level of indirection embodied in the Transend Proxy in the transfer path between the client and the server. The proxy transforms the retrieved web document data, primarily GIF <ref> [42] </ref> and JPEG [77] images, to representations that best suit the connectivity of the client. This transformation, called distillation by the TranSend developers, trades the time to compress the document and transmit the compressed version across the link, against the quality of data.
Reference: [43] <author> Ramesh Govindan, Cengiz Alaettino glo, and Deborah Estrin. </author> <title> A framework for active distributed services. </title> <type> Technical Report 98-669, </type> <institution> International Sciences Institute, University of Southern California, </institution> <address> Los Angeles CA, </address> <year> 1998. </year>
Reference-contexts: Instead, we argue that these applications are adequately and effectively supported by a programmable service architecture, built on top of and in harmony with the existing Internet service model, that allows users to download and run code on their behalf at strategic locations within the network. We and others <ref> [43] </ref> call this programmable network infrastructure active services because we restrict the design to application-level services yet we inherit the novelty of the active networks programmability. In this dissertation we present our active service framework, called AS1 (for Active Service framework version 1). <p> In this section we present current research in active networks and describe how it relates to our notion of active services. Govindan et al. <ref> [43] </ref> give a high level description of a framework for application-level active services. The report outlines an architecture for the active nodes in their network and discusses some of the research issues involved, including service deployment and the design of the service platform. <p> To this end, we follow the lead of other projects in this area <ref> [43, 44, 101] </ref> by implementing an environment that consists of a programmable substrate that the servents program to implement complex computation. But we diverge from the active networks approach by constraining our environment to the application layer.
Reference: [44] <author> Carl A. Gunter, Scott M. Nettles, and Jonathan M. Smith. </author> <title> The SwitchWare active network architecture, </title> <month> Nov </month> <year> 1997. </year> <note> White paper available at http://www.cs.upenn.edu/ switchware. </note>
Reference-contexts: In contrast to our focus on application-level deployment and fault tolerance, most research 27 on active networks addresses support for the more ambitious goal of enabling efficient and safe computation on arbitrary nodes at the network layer. The SwitchWare project <ref> [44] </ref> is developing an architecture for programmable switches and routers. SwitchWare takes a language-based approach towards exploring the most extreme version of active networks where each packet executes a program. <p> To this end, we follow the lead of other projects in this area <ref> [43, 44, 101] </ref> by implementing an environment that consists of a programmable substrate that the servents program to implement complex computation. But we diverge from the active networks approach by constraining our environment to the application layer.
Reference: [45] <institution> Narrow-band visual telephone systems and terminal equipment, </institution> <month> July </month> <year> 1997. </year> <note> ITU-T Recommendation H.320. </note>
Reference-contexts: In this dissertation we present SCUBA our receiver-driven bandwidth adaptation protocol based on receiver interest. In contrast to commercial gateway control protocols, such as those in H.320 <ref> [45] </ref> and H.323 [46] based conferencing systems, which rely on a reliable control channel between client, gateway and gatekeeper, SCUBA leverages announce-listen communication to achieve a simple, highly scalable and robust media gateway control protocol.
Reference: [46] <institution> Packet-based multimedia communications systems, </institution> <month> Nov </month> <year> 1996. </year> <note> ITU-T Recommendation H.323. </note>
Reference-contexts: Our media gateway was the first RTP-compliant software video gateway and had a direct impact on the evolution of the specification for these components. The mixer and translator concept evolved further in the emerging ITU H.323 <ref> [46] </ref> standard for Internet multimedia conferencing, which uses RTP as its data transport. The core component of the H.323 conferencing architecture is the Multipoint Conferencing Unit (MCU), whose primary responsibility is to serve as a centralized rendezvous point for conference members, or other MCUs. <p> In this dissertation we present SCUBA our receiver-driven bandwidth adaptation protocol based on receiver interest. In contrast to commercial gateway control protocols, such as those in H.320 [45] and H.323 <ref> [46] </ref> based conferencing systems, which rely on a reliable control channel between client, gateway and gatekeeper, SCUBA leverages announce-listen communication to achieve a simple, highly scalable and robust media gateway control protocol. <p> Most of these function as H.323 <ref> [46] </ref> gateways that either bridge the IP-based network to the POTS network. While most of these products only handle the network level translations, one notable exception is the Accord MGC-100 [1], which is an H.323 MCU that provides a hardware-based video transcoding service, including rate-control and stream mixing.
Reference: [47] <author> Mark Handley. </author> <title> SAP: Session Announcement Protocol. Internet Draft, </title> <address> Nov 19, </address> <year> 1996. </year>
Reference-contexts: RTP sources periodically transmit sender reports that contain information on synchronization, transmission statistics, source identification, and application state (e.g., termination). Receivers in turn send periodic receiver reports that contain information on reception statistics (e.g., received sequence numbers, inter-packet jitter). The Session Announcement Protocol (SAP) <ref> [47] </ref> is an announce-listen protocol used on the MBone to advertise RTP session information. The advertisements themselves are specified using the Session Description Protocol (SDP) [49]. A typical advertisement contains the session name, description and time information along with multicast address specification for the various media in the session. <p> Report intervals are dynamically sized to limit the control bandwidth to a fixed percentage of the session bandwidth. This scaling mechanism is employed by several announce-listen control protocols, including RTCP control traffic in RTP, Scalable Reliable Multicast (SRM) [36] session messages, and the Session Announcement Protocol (SAP) <ref> [47] </ref>. We analyze the scalability of the announce-listen metaphor with respect to SCUBA in Section 4.3.
Reference: [48] <author> Mark Handley. </author> <title> Session DiRectory. </title> <institution> University College London. </institution> <note> Software on-line 3 </note> . 
Reference-contexts: A typical advertisement contains the session name, description and time information along with multicast address specification for the various media in the session. Additional information such as contact and encryption information, bandwidth specifications or application-specific attributes are also provisioned for in SDP. MBone Session Directories <ref> [48] </ref> are constructed by listening on a well-known multicast communication channel over which the SAP/SDP announcements are transmitter. Schooler used the announce-listen communication model as the basis for her multicast user directory service [83]. In this architecture, the announce-listen model is applied to resource discovery in the MBone.
Reference: [49] <author> Mark Handley and Van Jacobson. SDP: </author> <title> Session Directory Protocol. </title> <type> Internet Draft, </type> <month> Mar 26, </month> <year> 1997. </year>
Reference-contexts: Receivers in turn send periodic receiver reports that contain information on reception statistics (e.g., received sequence numbers, inter-packet jitter). The Session Announcement Protocol (SAP) [47] is an announce-listen protocol used on the MBone to advertise RTP session information. The advertisements themselves are specified using the Session Description Protocol (SDP) <ref> [49] </ref>. A typical advertisement contains the session name, description and time information along with multicast address specification for the various media in the session. Additional information such as contact and encryption information, bandwidth specifications or application-specific attributes are also provisioned for in SDP. <p> While our architecture admits such configurations, we have not yet worked out all the details of service composition, how clients and/or servents would interact with the session directory service <ref> [49] </ref> to allocate multicast address, and so forth; these problems are topics of future work. 73 In the remainder of this section, we detail the design of four of the six components: service environment, location, management, and attachment. <p> This leads to the following specification of the SID in MeGa. For multicast requests, the SID is: sspec:media while for unicast requests the SID is 90 sspec:media:localaddr/rport where sspec is the unique session name given by the session creator (e.g., the o= field in an SDP <ref> [49] </ref> announcement), media is the type of media, localaddr is the local IP address of the client host, and rport is the port on which it will receive the data. <p> In its current form the MeGa implementation is comprised of four clients and four matching gateways: Media Client Gateway Video vic vgw Audio vat agw Whiteboard mb mbgw SDP <ref> [49] </ref> nsdr sdgw The audio and video gateways are implemented using the RTP gateway architecture described in Chapter 3. The SDP gateway is implemented as a reflector.
Reference: [50] <author> Todd D. Hodes, Randy H. Katz, Eduard Servan-Schreiber, and Lawrence A. Rowe. </author> <title> Compos-able ad-hoc mobile services for universal interaction. </title> <booktitle> In Proceedings of The Third ACM/IEEE Interattional Conference on Mobile Computing (MOBICOM), </booktitle> <address> Budapest, Hungary, </address> <month> Septmber </month> <year> 1997. </year>
Reference-contexts: In this model, a client listens on a well-known multicast address over which the required configuration information is periodically transmitted. Hodes et al. <ref> [50] </ref> describe a generalized scheme for service location using this approach based on the Service Location Protocol (SLP) [9]. In AS1, we decouple the physical location of the active service from the control communication channel by leveraging the level of indirection offered by multicast communication.
Reference: [51] <author> Don Hoffman and Michael Speer. </author> <title> Hierarchical video distribution over Internet-style networks. </title> <booktitle> In Proceedings of the IEEE International Conference on Image Processing, </booktitle> <address> Lausanne, Switzerland, </address> <month> September </month> <year> 1996. </year>
Reference-contexts: A simple application of the layered multicast approach was implemented by Brown et al. who implemented an extension to the basic CUSeeMe system [17] described in the previous section. Hoffmann and Speer also built a system based on the layered multicast architecture <ref> [51] </ref>. Their approach uses two adaptation techniques. One relies on a negotiation algorithm that obtains the highest quality of service from the network using an RSVP [106] session for each layer.
Reference: [52] <institution> ISO DIS 10918-1 Digital compression and coding of continuous tone still images (JPEG). CCITT Recommendation T.81. </institution>
Reference-contexts: Heterogeneity in end-systems manifests itself in a variety of ways. Hosts have different processing power and video/audio hardware configurations. One host may be a 200 MIPS workstation without special video hardware, another may be a PC with a JPEG <ref> [52] </ref> board. Alternatively, one host may have high-speed rendering support while another may have very simple rendering ca 2 pabilities, e.g., a Personal Digital Assistant (PDA). End-system hardware may be incompatible with the type of the data stream.
Reference: [53] <author> Alden W. Jackson and Craig Partridge. </author> <title> Smart packets, March 1997. </title> <booktitle> Slides from 2nd Active Nets Workshop 4 </booktitle> . 
Reference-contexts: Alexander et al. [2] describe an implementation of an active bridge implemented entirely by switchlets running within the SwitchWare architecture. A related effort is the BBN smart packets and active router projects <ref> [53] </ref> Bhattacharjee et al. [13] describe an active networks architecture for dealing with congestion in the network. They detail the use of active processors software modules that implement application specific processing on a packet-level basis.
Reference: [54] <author> Van Jacobson. </author> <title> DARTNET Planning and Review Meeting, </title> <month> December </month> <year> 1991. </year>
Reference: [55] <author> Van Jacobson. </author> <title> SIGCOMM '94 Tutorial: Multimedia conferencing on the Internet, </title> <month> August </month> <year> 1994. </year>
Reference-contexts: Receivers interested in a particular transmission simply tune in by subscribing to the multicast group in question. This loosely coupled, light-weight, real-time multimedia communication model is known as the Light-weight Sessions architecture <ref> [55] </ref> and is the hallmark of RTP-based conferencing. The fundamental communication model in the light-weight sessions architecture is the announce-listen communication model, which is based on the principle of periodic, self-descriptive, temporally independent messages that are transmitted between session members over a common multicast communication channel. <p> Real-time collaborative multicast-based applications leverage a communication model where parties in the collaboration session simply tune-in to or tune-out of the multicast group without 76 any explicit group notification operation. This loosely coupled, light-weight, real-time multimedia communication model is known as the light-weight sessions architecture <ref> [55] </ref>. Announce-listen communication serves as the primary protocol building block for lightweight session applications. The model is characterized by several properties: a shared (multicast) communication channel over which all parties communicate; periodic, self-descriptive (i.e., temporally independent) protocol messages; timer-based aging of state; and reconfigurable components.
Reference: [56] <author> Van Jacobson and Steven McCanne. </author> <note> LBL Whiteboard. </note> <institution> Lawrence Berkeley Laboratory. </institution> <note> Software on-line 5 </note> . 
Reference-contexts: Following the video gateway application description, we present three other applications of SCUBA: end-to-end video conferencing, cross-media interactions and floor control. 4.1 Introduction and Motivation We motivate our approach to the intra-session bandwidth allocation problem by observing that although the MBone tools <ref> [95, 39, 85, 68, 57, 56] </ref> can be used for a variety of communication styles (e.g., point-to-point internet phone calls, small group design collaborations or research 45 meetings, or seminar distribution to large groups with tightly coupled feedback from the remote audience), a non-interactive, passive style of communication has emerged as
Reference: [57] <author> Van Jacobson and Steven McCanne. </author> <title> Visual Audio Tool. </title> <institution> Lawrence Berkeley Laboratory. </institution> <note> Software on-line 6 . 3 ftp://cs.ucl.ac.uk/mice/sdr/ 4 available at http://www.net-tech.bbn.com/smtpkts/baltimore/index.htm 5 ftp://ftp.ee.lbl.gov/conferencing/wb 6 ftp://ftp.ee.lbl.gov/conferencing/vat 105 </note>
Reference-contexts: The dashed edges represent tunnels whereas the darker edges represent physical links. 11 munication model to provide efficient multi-party multimedia communication, among which the most prominent are applications for audio conferencing such as nevot [85], vat <ref> [57] </ref>, and rat, video conferencing application such as ivs [95], nv [40], and vic [68], and the wb [36] shared whiteboard tool. <p> The original implementation leveraged off the flexible code base in vic [67] and vat <ref> [57] </ref>, by incorporating vic's H.261 encoder, JPEG decoder, and networking implementation. <p> Following the video gateway application description, we present three other applications of SCUBA: end-to-end video conferencing, cross-media interactions and floor control. 4.1 Introduction and Motivation We motivate our approach to the intra-session bandwidth allocation problem by observing that although the MBone tools <ref> [95, 39, 85, 68, 57, 56] </ref> can be used for a variety of communication styles (e.g., point-to-point internet phone calls, small group design collaborations or research 45 meetings, or seminar distribution to large groups with tightly coupled feedback from the remote audience), a non-interactive, passive style of communication has emerged as <p> Thus, SCUBA can utilize activity on the audio channel to configure its receiver-interest report on the video channel. Similarly, pen input to a shared whiteboard tool can be used to raise priority of media streams originating from the same source. Some multimedia conferencing tools, e.g., vic and vat <ref> [57] </ref>, use a common control channel (called a coordination bus) to exchange cross-media control information. For example, when vat receives the first packet of a talk spurt it announces the event over the coordination bus. Any tool listening to the bus can then react accordingly.
Reference: [58] <author> Raj Jain. </author> <title> The Art of Computer Systems Performance Analysis. </title> <publisher> John Wiley & Sons Inc., </publisher> <year> 1991. </year>
Reference-contexts: A consequence of the Central Limit Theorem is that N = Z 1ff=2 2 where is the standard deviation of the weight distribution, and Z p is the p-quantile of the unit normal variate <ref> [58] </ref>. Using this result, we can compute the number of samples required to establish the desired confidence level for a given confidence interval.
Reference: [59] <author> Anthony Joseph, Alan F. deLespinasse, Tauber Joshua A, David K. Gifford, and M. Frans Kaashoek. </author> <title> Rover: A toolkit for mobile information access. </title> <booktitle> In Proceedings of the Fifteenth Symposium on Operating Systems Principles, </booktitle> <month> December </month> <year> 1995. </year>
Reference-contexts: The Load Manager has at its disposal a collection of transcoders, or workers (W), which perform the necessary operation on the given web document and return it to the user through the Front End. Joseph et al. <ref> [59] </ref> describe the Rover system that implements a proxy-based architecture specifically tuned both for mobile and client-server type applications. The system uses Queued Remote-Procedure Calls (QRPC) to overcome periods of disconnectivity and to better utilize the network link by scheduling transactions intelligently.
Reference: [60] <author> Leonard Kleinrock. Nomadic computing, </author> <month> Nov </month> <year> 1995. </year> <title> Keynote Address: </title> <booktitle> International Conf. on Mobile Computing and Networking (MOBICOM). </booktitle>
Reference-contexts: The ability to quickly re-program and deploy new protocols at any level in the network architecture is not possible in nor is it the goal of active services, and applications like nomadic routing <ref> [60] </ref>, localized TCP optimizations (e.g., snoop [10]), SYN-flooding avoidance, etc. are not naturally amenable to our framework.
Reference: [61] <author> Weidong Kou and Tore Fjallbrant. </author> <title> A direct computation of DCT coefficients for a signal block taken from two adjacent blocks. </title> <journal> IEEE Transactions on Signal Processing, </journal> <month> July </month> <year> 1991. </year>
Reference-contexts: The output is an 8-point DCT of the subsampled signal. We use a matrix decomposition as in <ref> [61] </ref>. Instead of judiciously factoring the matrices to reduce the number of multiply operations, we use approximate multipliers to reduce them to fixed point shifts and adds. Let x 1 and x 2 be two 8-point signals (represented as column vectors) and X 1 , X 2 be their DCTs.
Reference: [62] <author> Eugene L. Lawler. </author> <title> Fast approximation algorithms for knapsack problems. </title> <booktitle> In Proceedings of 18th Ann. Symp. on Foundations of Computer Science, </booktitle> <pages> pages 206-213, </pages> <address> Long Beach, CA, 1977. </address> <publisher> IEEE Computer Society. </publisher>
Reference-contexts: Cheung has suggested that a natural fit for the function is a rate-distortion function where the SNR curves are weighted by the source weights [22]. Approximation algorithm for knapsack-type problem exist <ref> [62] </ref>. Despite the fact that the partial-order knapsack problem is strong NP-complete there is sufficient structure in the problem such that it might be amenable to some form of approximation algorithm, or perhaps a randomized approach.
Reference: [63] <author> My T. Le, Srinivasan Seshan, Fredrick Burghardt, and Jan Rabaey. </author> <booktitle> Software architecture of the Infopad system. In Proceedings of the Mobidata Workshop on Mobile and Wireless Information Systems, </booktitle> <month> November </month> <year> 1994. </year>
Reference-contexts: One such example is the UC Berkeley Infopad [90]. The goal of the Infopad project is the design and implementation of a low-power, mobile, wireless multimedia terminal: the pad. To support real-time applications in this environment, the Infopad designers implemented an architecture for network adaptation <ref> [70, 63] </ref>. Figure 2.2 illustrates the Infopad network architecture, called the Infonet. It consists of a centralized agent for each pad, the pad server, which controls all aspects of the agents operation.
Reference: [64] <author> Steven McCanne. </author> <title> Scalable Compression and Transmission of Internet Multicast Video. </title> <type> PhD thesis, </type> <institution> University of California, Berkeley, </institution> <month> December </month> <year> 1996. </year>
Reference-contexts: enabling simultaneous transmission of multimedia data to heterogeneous sets of receivers at rates that match the individual constraints of each receiver, rather than that of the most constrained. 1.2 An End-to-End Approach and its Limitations One solution to the least common denominator problem is McCanne's Receiver-driven Layered Multicast (RLM) scheme <ref> [64] </ref>. RLM specifically targets the problem of video transmission over heterogeneous networks. It utilizes a technique called layered transmission whereby the video data is broken up into several layers, each of which is transmitted over a separate network channel. <p> Rather, the system will converge to zero. The most comprehensive design and implementation of the layered multicast approach was developed by McCanne in his Receiver-driven Layered Multicast (RLM) work <ref> [64, 69] </ref>. RLM is an end-to-end solution, i.e., one which operates solely with the help of the end-applications. In RLM, receivers rely only on IP multicast support to adjust their reception rate.
Reference: [65] <author> Steven McCanne, Eric A. Brewer, Randy H. Katz, Larry Rowe, Elan Amir, et al. </author> <title> Toward a common infrastructure for multimedia-networking middleware. </title> <booktitle> In Proceedings of the Fifth International Workshop on Network and OS Support for Digital Audio and Video (NOSSDAV), </booktitle> <address> St. Louis, Missouri, </address> <month> May </month> <year> 1997. </year>
Reference-contexts: Subsequent implementations of the gateway leveraged the MASH <ref> [65] </ref> environment to produce a very flexible and modular implementation. MASH is a Tcl/OTcl [73, 100] interpreter that has been significantly extended with multimedia capabilities. Using the OTcl framework, MASH exports an interface that combines the modularity of an object-oriented design with the power of scripted languages. <p> Because our principal research efforts revolve around real-time multimedia networking applications, we implemented our AS1 programmable substrate using the MASH platform <ref> [65] </ref>. As we described in Section 3.5, MASH is a Tcl [73] interpreter extended with real-time multimedia and networking related capabilities.
Reference: [66] <author> Steven McCanne and Sally Floyd. </author> <title> The UCB/LBNL Network Simulator. </title> <institution> University of Cali-fornia, Berkeley. </institution> <note> Software on-line 7 </note> . 
Reference-contexts: Assuming the session bandwidth, B, is 128 kb/s, proportional bandwidth allocation results in S 0 transmitting at 128 fi 0.95 fi 0.7 = 85.12 kb/s and S 1 at 36.48 kb/s. To illustrate the dynamics of this distributed algorithm, we implemented SCUBA in the ns network simulator <ref> [66] </ref> and ran a simple experiment consisting of four sources and three receivers across a single bottleneck link. All sources were placed on one side of the link while the receivers were placed on the other. The session bandwidth was set to 400 kb/s. 52 2.0 and 2.3, respectively. <p> For example, a launch overhead factor of 1.5 implies that 2.5N HMs were created before the algorithm stabilized at N HMs. Figure 5.7 plots the relationship between the ratio of the adaptation to 84 announcement intervals and the launch overhead factor obtained in an ns <ref> [66] </ref> simulation of the HM deployment algorithm on a cluster of 40 machines with a target population size of 10. As the ratio of adaptation to announcement intervals decreases, the number of redundant launches increases. <p> A stand-alone version of the RTP Gateway, which handles audio and video streams, is available from: http://www.cs.berkeley.edu/elan/rtpgw/ An implementation of SCUBA is available within the ns <ref> [66] </ref> network simulator. This is available from: http://www-mash.cs.berkeley.edu/ns/ The SCUBA implementation is in the tcl/rtp/session-scuba.tcl file.
Reference: [67] <author> Steven McCanne and Van Jacobson. </author> <title> VIC: video conference. </title> <institution> Lawrence Berkeley Laboratory and University of California, Berkeley. </institution> <note> Software on-line 8 </note> . 
Reference-contexts: The original implementation leveraged off the flexible code base in vic <ref> [67] </ref> and vat [57], by incorporating vic's H.261 encoder, JPEG decoder, and networking implementation.
Reference: [68] <author> Steven McCanne and Van Jacobson. </author> <title> vic: a flexible framework for packet video. </title> <booktitle> In Proceedings of ACM Multimedia '95. ACM, </booktitle> <month> November </month> <year> 1995. </year>
Reference-contexts: The dashed edges represent tunnels whereas the darker edges represent physical links. 11 munication model to provide efficient multi-party multimedia communication, among which the most prominent are applications for audio conferencing such as nevot [85], vat [57], and rat, video conferencing application such as ivs [95], nv [40], and vic <ref> [68] </ref>, and the wb [36] shared whiteboard tool. <p> At low bit rates, this interval can be substantial. Intra-H.261. A solution to this problem is to avoid inter-mode blocks altogether and instead code every block in intra-mode. This approach, called Intra-H.261 <ref> [68] </ref>, relies on conditional replenishment instead of motion compensation to reduce the bit rate. In conditional replenishment, the video image is partitioned into small blocks and only the blocks that change are transmitted. Intra-H.261 carries out conditional replenishment by using H.261 macroblock addressing to skip over unreplenished blocks. <p> The JPEG decoder performs table-driven Huffman decoding of the DCT transform coefficients in parallel with conditional replenishment. We optimize the case of an unreplenished block by Huffman decoding the first six DCT coefficients and comparing them to what has already been transmitted, as described in <ref> [68] </ref>. If they are similar enough, we skip the current block by parsing the rest of the coefficients in the block without any additional processing. Hence, in the case where there is little motion in the scene, the system runs at the Huffman decoding speed (which just uses table lookups). <p> Following the video gateway application description, we present three other applications of SCUBA: end-to-end video conferencing, cross-media interactions and floor control. 4.1 Introduction and Motivation We motivate our approach to the intra-session bandwidth allocation problem by observing that although the MBone tools <ref> [95, 39, 85, 68, 57, 56] </ref> can be used for a variety of communication styles (e.g., point-to-point internet phone calls, small group design collaborations or research 45 meetings, or seminar distribution to large groups with tightly coupled feedback from the remote audience), a non-interactive, passive style of communication has emerged as <p> This section details two other applications that illustrate how side-information generated by SCUBA can improve their performance. We first describe the integration of SCUBA in our video conferencing tool vic <ref> [68] </ref>, including the application to voice-switched bandwidth allocation. In this example, we demonstrate an approach to determine the values of SCUBA votes in practice.
Reference: [69] <author> Steven McCanne, Van Jacobson, and Martin Vetterli. </author> <title> Receiver-driven layered multicast. </title> <booktitle> In Proceedings of SIGCOMM '96, </booktitle> <address> Stanford, CA, </address> <month> August </month> <year> 1996. </year> <note> ACM. </note>
Reference-contexts: But this style of adaptation is only one piece of the rate adaptation problem; another important goal of adaptation is to accommodate and avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders. While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> Rather, the system will converge to zero. The most comprehensive design and implementation of the layered multicast approach was developed by McCanne in his Receiver-driven Layered Multicast (RLM) work <ref> [64, 69] </ref>. RLM is an end-to-end solution, i.e., one which operates solely with the help of the end-applications. In RLM, receivers rely only on IP multicast support to adjust their reception rate. <p> But this is only one piece of the rate adaptation problem; another important goal is to avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders 1 . While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> Furthermore, we view the development of real-time network services as a complementary optimization: our protocols will work effectively in concert with real-time services if and when they become widely available. 46 Layered Multicast (RLM) <ref> [69] </ref>, Destination Set Grouping [23], and Thin Streams [103], tune the delivery rate at each receiver individually. In this latter case, each receiver tunes its inbound reception rate by adjusting its level of subscription to a set of hierarchical signal layers that are striped across multiple multicast groups. <p> Running each source at the rate of the slowest link is clearly undesirable and prevents well-connected receivers from fully exploiting their available bandwidth. This limitation can be overcome with a layered transmission scheme <ref> [4, 69, 87, 91] </ref>. In this model each source generates a layered media stream that is striped across multiple network channels. <p> Thus, to maximize quality, a receiver subscribes to as many network channels as is possible with 53 out congesting the network. One such approach, detailed in Chapter 2, is Receiver-driven Layered Multicast (RLM) <ref> [69] </ref>. In RLM, each source stripes its data in the most straightforward manner possible a signal layer k is mapped to the corresponding network layer k as depicted in Figure 4.5. But this arrangement treats each source equally.
Reference: [70] <author> Shankar Narayanaswamy, Srini Seshan, et al. </author> <title> Application and network support for Infopad. </title> <journal> IEEE Personal Communications, </journal> <year> 1996. </year>
Reference-contexts: One such example is the UC Berkeley Infopad [90]. The goal of the Infopad project is the design and implementation of a low-power, mobile, wireless multimedia terminal: the pad. To support real-time applications in this environment, the Infopad designers implemented an architecture for network adaptation <ref> [70, 63] </ref>. Figure 2.2 illustrates the Infopad network architecture, called the Infonet. It consists of a centralized agent for each pad, the pad server, which controls all aspects of the agents operation.
Reference: [71] <author> Brian D. Noble, Morgan Price, and M. Satyanarayanan. </author> <title> A programming interface for application-aware adaptation in mobile computing. </title> <booktitle> In Mobile and Location-Independent Computing Symposium, </booktitle> <pages> pages 57-66, </pages> <year> 1995. </year> <note> 7 http://www-mash.cs.berkeley.edu/ns/ 8 ftp://ftp.ee.lbl.gov/conferencing/vic 106 </note>
Reference-contexts: It does not address the issue of extending this environment to the Internet or conversely extending the Internet to the mobile environment. The system is object-based, containing a central conference coordinator that handles all the communication for the mobile terminals. The Odyssey system <ref> [71] </ref> from CMU focuses on file system operations in a heterogeneous mobile environment by providing an API to applications for specifying the desired quality of service. Multiple versions of the data, differentiated by retrieval bandwidth requirements, provide for multiple classes of service as requested by the application.
Reference: [72] <author> J org Nonnenmacher and Ernst Biersack. </author> <title> Optimal multicast feedback. </title> <note> Submitted to IEEE INFOCOMM 98, </note> <year> 1998. </year>
Reference-contexts: The problem of minimizing the number of duplicate launches is equivalent to the problem of minimizing the number of duplicate feedback messages in a multicast damping protocol <ref> [36, 88, 72] </ref>. Specifically in our context, the problem is how to choose the launch timer distribution so that the number of duplicate launches is minimized while at the same time minimizing the latency until the first launch. <p> Nonnenmacher and Biersack have shown that an exponential distribution works particularly well, yielding an almost constant low number of expected duplicate launches over a large range of HM numbers <ref> [72] </ref>. However, the disadvantage of using an exponential distribution in our problem is that for small numbers of HMs we experience a relatively large expected latency until the first launch.
Reference: [73] <author> John K. Ousterhout. </author> <title> Tcl and the Tk Toolkit. </title> <publisher> Addison-Wesley, </publisher> <year> 1994. </year>
Reference-contexts: Subsequent implementations of the gateway leveraged the MASH [65] environment to produce a very flexible and modular implementation. MASH is a Tcl/OTcl <ref> [73, 100] </ref> interpreter that has been significantly extended with multimedia capabilities. Using the OTcl framework, MASH exports an interface that combines the modularity of an object-oriented design with the power of scripted languages. Objects in MASH are implemented either in C++ or in Tcl/OTcl, or in both (considered split objects). <p> Because our principal research efforts revolve around real-time multimedia networking applications, we implemented our AS1 programmable substrate using the MASH platform [65]. As we described in Section 3.5, MASH is a Tcl <ref> [73] </ref> interpreter extended with real-time multimedia and networking related capabilities.
Reference: [74] <author> John K. Ousterhout. </author> <title> Scripting: </title> <booktitle> Higher level programming for the 21st century. IEEE Computer, </booktitle> <month> March </month> <year> 1998. </year>
Reference-contexts: The use of a scripting language for plumbing together components in our programmable substrate strikes a good balance between the power of low-level system languages such as C++, and the flexibility and ease of use of high-level scripted languages such as Tcl/OTcl <ref> [74] </ref>.
Reference: [75] <author> Christos Papadopoulos, Guru Parulkar, and George Varghese. </author> <title> An error control scheme for large-scale multicast applications. </title> <booktitle> In Proceedings of INFOCOMM'98, </booktitle> <address> San Francisco, CA, </address> <month> March </month> <year> 1998. </year>
Reference-contexts: While the primary motivation for subcasting has been in the context of local recovery of losses in reliable multicast protocols <ref> [75, 26] </ref>, it also provides interesting possibilities in our work. Subcast enables us to leverage geographic and topological locality in the SCUBA report transmissions, thereby providing a natural hierarchy for vote distribution.
Reference: [76] <author> Peter Parnes, Kare Synnes, and Dick Schefstrom. </author> <title> Lightweight Application Level Multicast Tunneling using mTunnel. </title> <publisher> Elsevier Science, </publisher> <year> 1998. </year> <note> Submitted for Review. </note>
Reference-contexts: Subsequent versions of the CUSeeMe system [102] leverage multicast communication and transcoding in a product which is analogous to our media gateway. However, the centralized nature of their architecture presents inherent scaling problems with respect to the number of streams it can handle. Parnes et al. <ref> [76] </ref> describe the mTunnel application, which sets up application level mul-ticast tunnels for tunneling RTP streams across links with no multicast connectivity. MTunnel per 21 controls all the communication to each pad.
Reference: [77] <author> William B. Pennebaker and Joan L. Mitchell. </author> <title> JPEG Still Image Data Compression Standard. </title> <publisher> Van Nostrand Reinhold, </publisher> <year> 1993. </year>
Reference-contexts: Even if network bandwidth were plentiful, it is unlikely that a PDA device optimized for portability and low power would be able to support the computational requirements of video formats such as JPEG <ref> [77] </ref> and H.261 [97]. Thus, extending real-time Internet multimedia to these devices is difficult, if not impossible, despite the fact that real-time multimedia is perhaps their most compelling application. <p> The proxy transforms the retrieved web document data, primarily GIF [42] and JPEG <ref> [77] </ref> images, to representations that best suit the connectivity of the client. This transformation, called distillation by the TranSend developers, trades the time to compress the document and transmit the compressed version across the link, against the quality of data. <p> For example, Discrete Cosine 33 encoder. In addition to any bandwidth reduction inherent in format conversion, the output can be rate-controlled by decoupling the generation of output frames from the arrival of input frames. Transform (DCT)-based coding schemes like JPEG <ref> [77] </ref> and H.261 [97] could be more efficiently transcoded using DCT coefficients, bypassing the forward and reverse transform of each block. Because we have decomposed the transcoder into separate encoder and decoder stages, the system is easily extensible.
Reference: [78] <author> Radia Perlman. </author> <title> Interconnections: Bridges and Routers. </title> <publisher> Addison-Wesley, </publisher> <year> 1992. </year>
Reference-contexts: This tree is often called the multicast distribution tree. A naive approach to multicast distribution is to have each router simply forward all mul-ticast packets on all interfaces except the one on which the packet was received <ref> [78] </ref>. This form of distribution, called flooding, relieves the router from maintaining any routing state. However, the scheme has several drawbacks. First, it causes an exponentially large number of duplicate packets. Second, that it causes traffic to flow in unnecessary regions of the network, thereby wasting bandwidth. <p> While RTP accounts for possibilities of routing loops, it is important to build a mechanism to prevent gateways from forming such application-level loops. This problem is analogous to preventing routing loops in network bridges, which is solved by constructing a spanning tree among all bridges <ref> [78] </ref>.
Reference: [79] <author> K. R. Rao and P. Yip. </author> <title> Discrete Cosine Transform: Algorithms, Advantages, Applications. </title> <publisher> Academic Press, Inc., </publisher> <year> 1990. </year>
Reference-contexts: However, this defeats our fast-path optimization, which relies on avoiding DCT computations. Fortunately, pixel subsampling can be carried out by operating on the DCT coefficients directly. Since the 2D DCT is a separable transform <ref> [79] </ref>, we need only consider the one dimensional downsampling problem; that is, we can operate on each column of the 2D DCT independently. <p> Let h (n) be our anti-aliasing filter, and H be its column vector DCT. We take H = (1; 1; 1; 1; 0; 0; 0; 0) T for a very simple low pass filter. Then, by the DCT convolution property <ref> [79] </ref>, we can multiply X k and H to have the effect of (approximately) convolving h (n) and x k .
Reference: [80] <author> D. Rieken, </author> <title> editor. Intelligent Agents. </title> <journal> Communications of the ACM. Association for Computing Machinery, </journal> <month> July </month> <year> 1994. </year>
Reference-contexts: Its primary limitation is the fact that it does not provide dynamic mechanisms based on user input for intra-session adaptation. Rather, all policies are either static of internal to the gateway. A high-level discussion of the use of software agents for network adaptation is provided in <ref> [80] </ref> including the notion of intelligent agents deployed in the network and performing tasks on behalf of users.
Reference: [81] <author> G. Van Rossum. </author> <title> Python tutorial. </title>
Reference-contexts: While we have not included a solution to this problem in our current design, nothing in our service environment model precludes the use of type-safe languages such as Safe-Tcl [15], Java [7], or Python <ref> [81] </ref> and as such we view this problem as important, yet orthogonal to our current endeavor.
Reference: [82] <author> J. H. Saltzer, D. P. Reed, and D. D. Clark. </author> <title> End-to-end arguments in system design. </title> <journal> ACM Transactions on Computer Systems, </journal> <volume> 2(4), </volume> <month> November </month> <year> 1984. </year>
Reference-contexts: The primary advantage of RLM is that it is an end-to-end scheme, i.e., one that is implemented only with the help of the application standing at the end points of the communication system <ref> [82] </ref>. The benefit of end-to-end solutions to network problems is that they preclude the need to place additional functionality within the network. This not only decreases the complexity of the solution, but also facilitates its deployment. As a result, where possible, an end-to-end approach to a problem is preferable.
Reference: [83] <author> Eve M. Schooler. </author> <title> A multicast user directory service for synchronous rendezvous. </title> <institution> Computer science department, California Institute of Technology, </institution> <month> September </month> <year> 1996. </year>
Reference-contexts: MBone Session Directories [48] are constructed by listening on a well-known multicast communication channel over which the SAP/SDP announcements are transmitter. Schooler used the announce-listen communication model as the basis for her multicast user directory service <ref> [83] </ref>. In this architecture, the announce-listen model is applied to resource discovery in the MBone. A user locates the desired resource user directories by listening for directory announcements. By limiting the reception scope, the user can control the locality of the resource that he/she is attempting to locate.
Reference: [84] <author> Angela Schuett, Suchitra Raman, Yatin Chawathe, Steven McCanne, and Randy H. Katz. </author> <title> A soft state protocol for accessing multimedia archives. </title> <booktitle> In Proceedings of NOSSDAV '98, </booktitle> <year> 1998. </year> <note> To appear. </note>
Reference-contexts: Schuett et al. are developing a real-time multimedia archival and playback service, MARS, using AS1 <ref> [84] </ref>. The real research question with the AS1 design is to determine what the tradeoffs are in moving away from the centralized model to the decentralized design offered by AS1. <p> An initial indication of the impact of this work has been Schuett et al.'s work on the redesign of historically hard-state archival access protocols in a soft-state framework as part of an AS1 active service for multimedia archival <ref> [84] </ref>.
Reference: [85] <author> Henning Schulzrinne. </author> <title> Voice communication across the Internet: A network voice terminal. </title> <type> Technical Report TR 92-50, </type> <institution> Dept. of Computer Science, University of Massachusetts, Amherst, Massachusetts, </institution> <month> July </month> <year> 1992. </year>
Reference-contexts: The dashed edges represent tunnels whereas the darker edges represent physical links. 11 munication model to provide efficient multi-party multimedia communication, among which the most prominent are applications for audio conferencing such as nevot <ref> [85] </ref>, vat [57], and rat, video conferencing application such as ivs [95], nv [40], and vic [68], and the wb [36] shared whiteboard tool. <p> Following the video gateway application description, we present three other applications of SCUBA: end-to-end video conferencing, cross-media interactions and floor control. 4.1 Introduction and Motivation We motivate our approach to the intra-session bandwidth allocation problem by observing that although the MBone tools <ref> [95, 39, 85, 68, 57, 56] </ref> can be used for a variety of communication styles (e.g., point-to-point internet phone calls, small group design collaborations or research 45 meetings, or seminar distribution to large groups with tightly coupled feedback from the remote audience), a non-interactive, passive style of communication has emerged as
Reference: [86] <author> Henning Schulzrinne, Steve Casner, Ron Frederick, and Van Jacobson. RTP: </author> <title> A Transport Protocol for Real-Time Applications. </title> <institution> Internet Engineering Task Force, Audio-Video Transport Working Group, </institution> <month> November </month> <year> 1991. </year> <note> Internet Draft expires 3/1/96. </note>
Reference-contexts: This led to the development of the Real-Time Transport Protocol. 1.4.3 The Real-Time Transport Protocol The Real-time Transport Protocol (RTP) <ref> [86] </ref> is an application-level protocol that is designed to satisfy the needs of multi-party multimedia applications. We used RTP as the foundation for our architecture for accommodating heterogeneity in real-time multimedia transmission. This has enabled immediate and seamless integration of our work into the current Internet multimedia infrastructure. <p> We survey existing announce-listen based systems and protocols on the MBone that demonstrate the utility of this communication paradigm, and thus contributed to our choice to leverage it in our architecture. The control portion of the Real-time Transport Protocol (RTP) <ref> [86] </ref> (see Section 1.4.3), RTCP, is an announce-listen protocol. RTP sources periodically transmit sender reports that contain information on synchronization, transmission statistics, source identification, and application state (e.g., termination). Receivers in turn send periodic receiver reports that contain information on reception statistics (e.g., received sequence numbers, inter-packet jitter).
Reference: [87] <author> Nachum Shacham. </author> <title> Multipoint communication by hierarchically encoded data. </title> <booktitle> In Proceedings IEEE Infocom '92, </booktitle> <pages> pages 2107-2114. </pages> <publisher> ACM, </publisher> <year> 1992. </year>
Reference-contexts: Running each source at the rate of the slowest link is clearly undesirable and prevents well-connected receivers from fully exploiting their available bandwidth. This limitation can be overcome with a layered transmission scheme <ref> [4, 69, 87, 91] </ref>. In this model each source generates a layered media stream that is striped across multiple network channels.
Reference: [88] <author> Puneet Sharma, Deborah Estrin, Sally Floyd, and Van Jacobson. </author> <title> Scalable timers for soft state protocol. </title> <booktitle> In Proceedings of IEEE INFOCOMM 97, </booktitle> <month> April </month> <year> 1997. </year> <month> 107 </month>
Reference-contexts: The problem of minimizing the number of duplicate launches is equivalent to the problem of minimizing the number of duplicate feedback messages in a multicast damping protocol <ref> [36, 88, 72] </ref>. Specifically in our context, the problem is how to choose the launch timer distribution so that the number of duplicate launches is minimized while at the same time minimizing the latency until the first launch. <p> In our current design, we statically allocate 75% of the output 86 rate to background refreshes and 25% to new state announcements. However, in the future we plan leverage the schemes developed by Sharma et al. <ref> [88] </ref>, which adapt the update timers in soft-state protocols based on channel topology models, to explore methods for dynamically varying the update and refresh rate allocation.
Reference: [89] <author> Puneet Sharma, Deborah Estrin, Sally Floyd, and Lixia Zhang. </author> <title> Scalable session messages in srm using self-configuration. </title> <note> Submitted for publication, </note> <month> February </month> <year> 1998. </year>
Reference-contexts: In this way we greatly enhance the scalability of the protocol since the average weight convergence time is approximately proportional to the number of sources in local regions rather than in the entire session. This approach generalizes to several contexts. Sharma et al. <ref> [89] </ref> are investigating a very similar problem in the context of scalable session messages for SRM [36]. * Subcasting: The development of a mechanism for transmitting data on subtrees of multicast distribution trees, called subcasting, is a current topic of research in the reliable multicast community.
Reference: [90] <author> S. Sheng, R.W. Broderson, and A. Chandrakasan. </author> <title> A portable multimedia terminal. </title> <journal> IEEE Communications Magazine, </journal> <pages> pages 64-67, </pages> <month> December </month> <year> 1992. </year>
Reference-contexts: Mobile and wireless computing systems are often characterized by thin clients and relatively slow, error-prone communication links. Consequently, several systems in this space include agent-based components that provide network adaptive services to the end-clients. One such example is the UC Berkeley Infopad <ref> [90] </ref>. The goal of the Infopad project is the design and implementation of a low-power, mobile, wireless multimedia terminal: the pad. To support real-time applications in this environment, the Infopad designers implemented an architecture for network adaptation [70, 63]. Figure 2.2 illustrates the Infopad network architecture, called the Infonet. <p> This enables fine grained adaptation and control of the transmission rate of real-time multimedia data within the scarce wireless link bandwidth. 3.7.3 Infopad Wireless Terminal Project The UC Berkeley Infopad <ref> [90] </ref> is a wireless mobile system that consists of a low-power mobile multimedia terminal, and a network support system that interfaces the terminal with the Internet.
Reference: [91] <author> David Taubman and Avideh Zakhor. </author> <title> Multi-rate 3-D subband coding of video. </title> <journal> IEEE Transactions on Image Processing, </journal> <volume> 3(5) </volume> <pages> 572-588, </pages> <month> September </month> <year> 1994. </year>
Reference-contexts: Running each source at the rate of the slowest link is clearly undesirable and prevents well-connected receivers from fully exploiting their available bandwidth. This limitation can be overcome with a layered transmission scheme <ref> [4, 69, 87, 91] </ref>. In this model each source generates a layered media stream that is striped across multiple network channels.
Reference: [92] <author> David L. Tennenhouse, Jonathan M. Smith, W. David Sincoskie, David J. Wetherall, and Gary J. Minden. </author> <title> A survey of active network research. </title> <journal> IEEE Communications Magazine, </journal> <volume> 35 </volume> <pages> 80-86, </pages> <month> Jan </month> <year> 1997. </year>
Reference-contexts: To overcome this limitation, we have developed a general programmable network infrastructure for the deployment of application-level computation within the network. This active service infrastructure inherits the novelty of the Active Networks approach <ref> [92] </ref>, which advocates the development of a programmable infrastructure at all layers of network operation, but restricts the design to application-level services to ensure deployment in the current Internet infrastructure. <p> Unfortunately the current Internet infrastructure does not support the programming of the network at exactly the right place as required by MeGa. To overcome this limitation, the Active Networks initiative <ref> [92] </ref> proposes that the Internet service model be replaced with a new model in which the network as a whole becomes a fully programmable computational environment. <p> While the requirements of video gateways are often cited in the active networks literature as proof of a pressing need for this new infrastructure <ref> [92] </ref>, the far-reaching implications of uprooting and supplanting over twenty years of Internet design experience begs the question: Is active networks both sufficient and necessary for deploying scalable, flexible, and robust services, like the video gateway service, within the network on behalf of the user? While we concede that a comprehensive
Reference: [93] <author> David L. Tennenhouse and David J. Wetherall. </author> <title> Towards an active network architecture. </title> <journal> Computer Communication Review, </journal> <volume> 26(2) </volume> <pages> 5-18, </pages> <month> April </month> <year> 1996. </year>
Reference-contexts: Finally, Wetherall and Tennenhouse describe a mechanism for deploying computation in the network using an new option in the IP header: the ACTIVE IP option [101] in conjunction with embedding the actual code, or capsules <ref> [93] </ref>, in the network-level packet header. Similar to our goals, this approach is motivated in part by the goal of compatibility with today's Internet. 2.5 Summary of Related Work Agent architectures for handling network and end-system heterogeneity have proven effective in several non-real-time systems.
Reference: [94] <author> Kannan Thiruvengadam. </author> <title> Scalability in media on demand systems. </title> <type> Master's thesis, </type> <institution> University of Alberta, Alberta, Canada, </institution> <month> November </month> <year> 1995. </year> <note> Available from http://www.cs.ualberta.edu/ kannan/thesis.html. </note>
Reference-contexts: In the paper, the authors present a brief survey of methods for multicast video distribution in heterogeneous environments. The paper mentions the use of video gateways for bridging heterogeneous environments. However, the paper omits many important details and the authors did not implement their proposal. Thiruvengadam <ref> [94] </ref> describes the use of video gateways in hypermedia document retrieval. The work outlines the design of a simple transcoder (video gateway) for the nv [39] video format. Rate control is performed by modifying the quantization parameter in the nv codec in conjunction with spatial subsampling.
Reference: [95] <author> Thierry Turletti. </author> <title> INRIA Video Conferencing System (ivs). </title> <institution> Institut National de Recherche en Informatique et an Automatique. </institution> <note> Software on-line 9 </note> . 
Reference-contexts: The dashed edges represent tunnels whereas the darker edges represent physical links. 11 munication model to provide efficient multi-party multimedia communication, among which the most prominent are applications for audio conferencing such as nevot [85], vat [57], and rat, video conferencing application such as ivs <ref> [95] </ref>, nv [40], and vic [68], and the wb [36] shared whiteboard tool. <p> In this section, we survey existing schemes for bandwidth congestion control in MBone multimedia conferences. In Chapter 4 we detail how our protocol interacts with several of these protocols. The INRIA Video System (IVS) <ref> [95] </ref> performs sender-based adaptation by adjusting the source transmission rate according to congestion feedback from the receivers. Requiring feedback from all receivers would cause the source to be overwhelmed with responses as the number of receivers grew. <p> Following the video gateway application description, we present three other applications of SCUBA: end-to-end video conferencing, cross-media interactions and floor control. 4.1 Introduction and Motivation We motivate our approach to the intra-session bandwidth allocation problem by observing that although the MBone tools <ref> [95, 39, 85, 68, 57, 56] </ref> can be used for a variety of communication styles (e.g., point-to-point internet phone calls, small group design collaborations or research 45 meetings, or seminar distribution to large groups with tightly coupled feedback from the remote audience), a non-interactive, passive style of communication has emerged as
Reference: [96] <author> Thierry Turletti and Jean-Chrysostome Bolot. </author> <title> Issues with multicast video distribution in heterogeneous packet networks. </title> <booktitle> In Proceedings of the Sixth International Workshop on Packet Video, </booktitle> <address> Portland, OR, </address> <month> September </month> <year> 1994. </year>
Reference-contexts: The earliest mention of the use of media gateways in the MBone environment is in a paper 1 http://www.microsoft.com/netmeeting/prodguide contains a relatively extensive list of such products. 20 by Turletti and Bolot <ref> [96] </ref>. In the paper, the authors present a brief survey of methods for multicast video distribution in heterogeneous environments. The paper mentions the use of video gateways for bridging heterogeneous environments. However, the paper omits many important details and the authors did not implement their proposal.
Reference: [97] <institution> Video codec for audiovisual services at p*64kb/s, </institution> <year> 1993. </year> <note> ITU-T Recommendation H.261. </note>
Reference-contexts: Even if network bandwidth were plentiful, it is unlikely that a PDA device optimized for portability and low power would be able to support the computational requirements of video formats such as JPEG [77] and H.261 <ref> [97] </ref>. Thus, extending real-time Internet multimedia to these devices is difficult, if not impossible, despite the fact that real-time multimedia is perhaps their most compelling application. One particular barrier for multi-party conferencing applications is the lack of efficient mul-tipoint communication in the form of IP multicast [29] among all participants. <p> For example, Discrete Cosine 33 encoder. In addition to any bandwidth reduction inherent in format conversion, the output can be rate-controlled by decoupling the generation of output frames from the arrival of input frames. Transform (DCT)-based coding schemes like JPEG [77] and H.261 <ref> [97] </ref> could be more efficiently transcoded using DCT coefficients, bypassing the forward and reverse transform of each block. Because we have decomposed the transcoder into separate encoder and decoder stages, the system is easily extensible.
Reference: [98] <author> D. Waitzman, C. Partridge, and S. Deering. </author> <title> Distance Vector Multicast Routing Protocol. ARPANET Working Group Requests for Comment, DDN Network Information Center, </title> <booktitle> SRI International, </booktitle> <address> Menlo Park, CA, </address> <month> November </month> <year> 1988. </year> <month> RFC-1075. </month>
Reference-contexts: The flood-and-prune operation is most efficient in distribution trees where the receivers are densely distributed, called dense mode multicast. The predominant IP multicast routing protocols, Distance Vector Multicast Routing Protocol (DVMRP) <ref> [98] </ref> and the dense-mode variant of PIM [28], operate under the dense mode assumption. Since these protocols build distribution trees for each source, they are considered source-based routing protocols. An alternate approach, called sparse mode multicast [11, 28], is suited for situations where receivers are sparsely distributed.
Reference: [99] <author> Terry Watson. </author> <title> Effective wireless communication through application partitioning. </title> <booktitle> In Proceedings of Fifth Workshop on Hot Topics in Operating Systems, </booktitle> <pages> pages 24-27. </pages> <publisher> IEEE, </publisher> <month> May </month> <year> 1995. </year>
Reference-contexts: The primary drawback of the Infopad architecture is its centralized control. A failure in either the pad server or the pad requires a complete system reboot. When coupled with the vagaries of the wireless link, the overall system becomes quite fragile. Watson describes the Wit system <ref> [99] </ref> that is targeted towards the wireless mobile environment. Watson describes the use of application-partitioning between the mobile and stationary portions of the system. Using such partitioning, filtering operations can be performed on the data prior to its transmission over the bottleneck wireless link.
Reference: [100] <author> David Wetherall and Christopher J. Lindblad. </author> <title> Extending Tcl for dynamic object-oriented programming. </title> <booktitle> In Proceedings of the Tcl/Tk Workshop, </booktitle> <address> Ontario, Canada, </address> <month> July </month> <year> 1995. </year>
Reference-contexts: Subsequent implementations of the gateway leveraged the MASH [65] environment to produce a very flexible and modular implementation. MASH is a Tcl/OTcl <ref> [73, 100] </ref> interpreter that has been significantly extended with multimedia capabilities. Using the OTcl framework, MASH exports an interface that combines the modularity of an object-oriented design with the power of scripted languages. Objects in MASH are implemented either in C++ or in Tcl/OTcl, or in both (considered split objects). <p> Tcl provides a simple, flexible and easy-to-use programming model based on scripting, while the interface to the AS1 resources consists of a method API to a set of Object Tcl classes <ref> [100] </ref> that can be invoked from the servent's Tcl program. Under this model, servents are simply Object Tcl scripts interpreted by MASH, which we call mashlets.
Reference: [101] <author> David J. Wetherall and David L. Tennenhouse. </author> <title> The ACTIVE IP option. </title> <booktitle> In Proceedings of the 7th ACM SIGOPS European Workshop, </booktitle> <address> Connemara, Ireland, </address> <month> Sep </month> <year> 1996. </year> <note> ACM. </note>
Reference-contexts: Finally, Wetherall and Tennenhouse describe a mechanism for deploying computation in the network using an new option in the IP header: the ACTIVE IP option <ref> [101] </ref> in conjunction with embedding the actual code, or capsules [93], in the network-level packet header. <p> To this end, we follow the lead of other projects in this area <ref> [43, 44, 101] </ref> by implementing an environment that consists of a programmable substrate that the servents program to implement complex computation. But we diverge from the active networks approach by constraining our environment to the application layer.
Reference: [102] <institution> April 1998. </institution> <note> http://www.wpine.com/products/MeetingPoint. </note>
Reference-contexts: These flows are distributed simultaneously on multiple groups. The end client initially joins the first group and then drops down to the latter if it detects high packet loss [17]. Subsequent versions of the CUSeeMe system <ref> [102] </ref> leverage multicast communication and transcoding in a product which is analogous to our media gateway. However, the centralized nature of their architecture presents inherent scaling problems with respect to the number of streams it can handle.
Reference: [103] <author> Linda Wu, Rosen Sharma, and Brian Smith. </author> <title> Thin streams: An architecture for multicasting layered video. </title> <booktitle> In Proceedings of the Seventh International Workshop on Network and OS Support for Digital Audio and Video, </booktitle> <pages> pages 183-192, </pages> <address> St. Louis, Missouri, </address> <month> May </month> <year> 1997. </year> <note> ACM. 9 http://www.inria.fr/rodeo/ivs.html 108 </note>
Reference-contexts: But this style of adaptation is only one piece of the rate adaptation problem; another important goal of adaptation is to accommodate and avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders. While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> But this is only one piece of the rate adaptation problem; another important goal is to avoid network congestion by controlling the aggregate rate of traffic injected into the network across all senders 1 . While several solutions for rate-adaptive audio/video have been proposed <ref> [14, 18, 69, 23, 103] </ref>, none explicitly account for receiver interest in the adaptation process. In fact, existing algorithms adjust the rate of each media source independently and model the impact of competing flows on a given flow's control algorithm simply as background measurement noise. <p> Furthermore, we view the development of real-time network services as a complementary optimization: our protocols will work effectively in concert with real-time services if and when they become widely available. 46 Layered Multicast (RLM) [69], Destination Set Grouping [23], and Thin Streams <ref> [103] </ref>, tune the delivery rate at each receiver individually. In this latter case, each receiver tunes its inbound reception rate by adjusting its level of subscription to a set of hierarchical signal layers that are striped across multiple multicast groups.
Reference: [104] <author> Yechiam Yemini and Sushil da Silva. </author> <title> Towards programmable networks. </title> <booktitle> In Proceedings of IFIP/IEEE International Workshop on Distributed Systems, Operation and Management, </booktitle> <address> L'Aquila, Italy, </address> <month> Oct </month> <year> 1996. </year> <note> IEEE. </note>
Reference-contexts: The main difference is that this approach comes from the network up, while MeGa addresses the problem from the application-level down. While the former achieves increased generality, it does so by sacrificing the ability to leverage useful information from higher-level protocols such as SCUBA. The NetScript <ref> [104] </ref> project's goal is the design of a common language and execution environment to provide a universal abstraction of a programmable networking environment. NetScript is orthogonal to and complementary to our work and we foresee a possibility of leveraging it in our active service framework when it becomes more refined. <p> The current AS1 infrastructure provides the mechanism for this composition framework in that a servent can run as a client and thus launch an additional servent on its behalf, thereby forming a chain of servents. However, methods for specifying the semantics of these compositions in a high-level network program <ref> [104] </ref>, along with defining the interfaces between the composed servents remain as future work. * Servent Placement: The location of the servent within the network topology may have significant impact on its performance.
Reference: [105] <author> Bruce Zenel and Dan Duchamp. </author> <title> A general purpose proxy filtering mechanism applied to the mobile environment. </title> <booktitle> In Proceedings of MOBICOM '97, </booktitle> <month> October </month> <year> 1997. </year>
Reference-contexts: Moreover, the centralization of all data communication at the Front End creates a scaling problem in the real-time streaming case since all data is flowing through a single point of the system. Zenel and Duchamp <ref> [105] </ref> describe the general design of a proxy architecture that includes the notion of filters at an intermediary host, called the proxy server. These filters are implemented both at the application and operating system level.
Reference: [106] <author> L. Zhang, S. Deering, D. Estrin, S. Shenker, and D. Zappala. RSVP: </author> <title> A new resource ReSerVation Protocol. </title> <journal> IEEE Network Magazine, </journal> <pages> pages 8-18, </pages> <month> September </month> <year> 1993. </year>
Reference-contexts: Hoffmann and Speer also built a system based on the layered multicast architecture [51]. Their approach uses two adaptation techniques. One relies on a negotiation algorithm that obtains the highest quality of service from the network using an RSVP <ref> [106] </ref> session for each layer. The other uses a layered multicast approach where each receiver initially subscribes to the full quality, highest bandwidth level and then drops layers until congestion recedes. The latter scheme suffers from two main drawbacks. <p> We conclude this section by mentioning the significant amount of work in the topic of real-time multimedia transport that has focussed on network layer solutions within the Integrated Services Packet Network (ISPN) architecture described by Braden et al. [16]. Reservation based protocols such as Tenet [12], RSVP <ref> [106] </ref>, ST-II [19] or the class-based CBQ scheme [35] attempt to solve the transport problem by providing deterministic or statistical levels of service at the network layer.
References-found: 106

